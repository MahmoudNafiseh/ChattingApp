{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\chat\\\\src\\\\App.tsx\";\nimport * as React from 'react';\nimport { ChakraProvider, Box, Text, VStack, Grid, theme } from '@chakra-ui/react';\nimport { ColorModeSwitcher } from './ColorModeSwitcher';\nimport Amplify from 'aws-amplify';\nimport awsconfig from './aws-exports';\nimport { withAuthenticator } from '@aws-amplify/ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAmplify.configure({ ...awsconfig,\n  ssr: true\n});\n\nconst App = () => /*#__PURE__*/_jsxDEV(ChakraProvider, {\n  theme: theme,\n  children: /*#__PURE__*/_jsxDEV(Box, {\n    textAlign: \"center\",\n    fontSize: \"xl\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      minH: \"100vh\",\n      p: 3,\n      children: [/*#__PURE__*/_jsxDEV(ColorModeSwitcher, {\n        justifySelf: \"flex-end\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(VStack, {\n        spacing: 8,\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: \"Testing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 4\n}, this);\n\n_c = App;\nexport default _c2 = withAuthenticator(App);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/User/chat/src/App.tsx"],"names":["React","ChakraProvider","Box","Text","VStack","Grid","theme","ColorModeSwitcher","Amplify","awsconfig","withAuthenticator","configure","ssr","App"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACGC,cADH,EAEGC,GAFH,EAGGC,IAHH,EAKGC,MALH,EAOGC,IAPH,EAQGC,KARH,QASO,kBATP;AAUA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;;AAKAF,OAAO,CAACG,SAAR,CAAkB,EAAE,GAAGF,SAAL;AAAgBG,EAAAA,GAAG,EAAE;AAArB,CAAlB;;AAEA,MAAMC,GAAG,GAAG,mBACT,QAAC,cAAD;AAAgB,EAAA,KAAK,EAAEP,KAAvB;AAAA,yBACG,QAAC,GAAD;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,QAAQ,EAAC,IAAjC;AAAA,2BACG,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAmB,MAAA,CAAC,EAAE,CAAtB;AAAA,8BACG,QAAC,iBAAD;AAAmB,QAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,cADH,eAEG,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,CAAjB;AAAA,+BACG,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,QADH;;KAAMO,G;AAYN,qBAAeH,iBAAiB,CAACG,GAAD,CAAhC","sourcesContent":["import * as React from 'react';\nimport {\n   ChakraProvider,\n   Box,\n   Text,\n   Link,\n   VStack,\n   Code,\n   Grid,\n   theme,\n} from '@chakra-ui/react';\nimport { ColorModeSwitcher } from './ColorModeSwitcher';\nimport Amplify from 'aws-amplify';\nimport awsconfig from './aws-exports';\nimport { withAuthenticator } from '@aws-amplify/ui-react';\nimport { useEffect, useState } from 'react';\nimport { listMessages } from './graphql/queries';\nimport { createMessage } from './graphql/mutations';\nimport { onCreateMessage } from './graphql/subscriptions';\nAmplify.configure({ ...awsconfig, ssr: true });\n\nconst App = () => (\n   <ChakraProvider theme={theme}>\n      <Box textAlign='center' fontSize='xl'>\n         <Grid minH='100vh' p={3}>\n            <ColorModeSwitcher justifySelf='flex-end' />\n            <VStack spacing={8}>\n               <Text>Testing</Text>\n            </VStack>\n         </Grid>\n      </Box>\n   </ChakraProvider>\n);\nexport default withAuthenticator(App);\n"]},"metadata":{},"sourceType":"module"}